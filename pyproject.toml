[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "Intern-Trading-Game"
version = "0.1.0"
requires-python = ">=3.9,<3.13"
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
# Development dependencies, only needed for testing and local development
dev = [
  "pytest>=8.0",
  "pytest-asyncio>=0.21.0",
  "pre-commit>=2.20",
  "ruff>=0.3.0",
  "mypy>=1.5.1",
  "bandit>=1.7.5",
  "types-tqdm>=4.64.0",
  "types-PyYAML>=6.0.0",
  "httpx>=0.24.0",
  "websockets>=11.0"
]

# Documentation dependencies
docs = [
  "mkdocs-material>=9.4.0",
  "mkdocstrings[python]>=0.23.0",
  "mkdocs-gen-files>=0.5.0",
  "mkdocs-literate-nav>=0.6.0",
  "mkdocs-section-index>=0.3.5"
]

[tool.mypy]
mypy_path = "src"
packages = ["intern_trading_game"]
explicit_package_bases = true
namespace_packages = true
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "api: marks tests as API integration tests"
]

[tool.ruff]
# Same line length as previously configured
line-length = 79
# Exclude a variety of commonly ignored directories
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
# Enable Pyflakes ('F'), pycodestyle ('E'), isort ('I') rules
select = ["E", "F", "I"]
# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Ignore E203 (same as in original flake8 config) and E501 (line too long)
ignore = ["E203", "E501"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Indent with 4 spaces
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
# Follow the Black profile for import sorting
known-first-party = ["intern_trading_game"]

[tool.coverage.run]
source = ["intern_trading_game"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
